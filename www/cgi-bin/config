#!/usr/bin/lua

-- Konstanten

local timeout = 600 		-- FCM-Timeout 10 Minuten 

-- Ein paar Bibliotheken
local util = require("luci.util")
local sys = require("luci.sys")
local platform_info = require("platform_info")
local uci = luci.model.uci.cursor()
local fcm_web = require("fcm.web")
local fcm_functions = require("fcm.functions")

-- Grundlegen Informationen sammeln
local hostname = sys.hostname()
local model = platform_info.get_model()
local release = util.trim(sys.exec("cat /lib/gluon/release"))

local latitude = fcm_functions:fixhtml(util.trim(uci:get_first("gluon-node-info", "location", "latitude") or ""))
local longitude = fcm_functions:fixhtml(util.trim(uci:get_first("gluon-node-info", "location", "longitude") or ""))
local share_location = util.trim(uci:get_first("gluon-node-info", "location", "share_location") or "0")
local contact = util.trim(uci:get_first("gluon-node-info", "owner", "contact") or "")
local role = util.trim(uci:get_first("gluon-node-info", "system", "role") or "node")
local uptime_load = util.trim(sys.exec("uptime | sed 's/^ \+//'"))
local uptime = uptime_load:sub(uptime_load:find("up")+3,uptime_load:find(",")-1)
local node_load = uptime_load:sub(uptime_load:find("load average")+14)
local subpage = os.getenv ("PATH_INFO") or ""

-- HTTP POST Daten lesen
local post_data = fcm_functions:get_post_data()
local fcm_activ = fcm_functions:check_fcm_enabled(timeout)
local command = post_data["cmd"] or ""

-- Abmelden prüfen
if subpage == "/logout" then

  util.exec("rm /tmp/.wps_pressed")
  fcm_activ = false
  fcm_web:redirect("/cgi-bin/config")
  
else

-- Kopf der HTML-Datei
fcm_web:head( "Fast-Config-Mode von " .. fcm_functions:fixhtml(hostname) )

-- Body
fcm_web:start_of_body(subpage, fcm_activ)

io.write("<article class=\"content\" role=\"article\">")
io.write("")
io.write("	<div id=\"c1\" class=\"csc-default\">")
io.write("")
io.write("		<h1>Fast-Config-Mode von " .. fcm_functions:fixhtml(hostname) .. "</h1>")
io.write("")

-- Prüfen ob der FCM aktiv ist, sonst Warnung ausgeben
  
if fcm_activ == false then

  io.write("<table width=\"100%\">")
  io.write("  <tr>")
  io.write("    <th>Hinweis</th>")
  io.write("  </tr>")
  io.write("  <tr>")
  io.write("    <td color=\"red\">Um den Fast Config Mode zu aktivieren, bitte die Taste WPS/RESET am Router einmal kurz drücken</td> ")
  io.write("  </tr>   ")
  io.write("</table>  ")

  io.write("<P>&nbsp;</P>")
  
  subpage = "" -- Subpage löschen. Kein Zugriff auf die Config-Seiten

end

if subpage == "" then

	-- Allgemeine Informationen

	fcm_web:table_start("Allgemeine Informationen")

	fcm_web:table_item("Model", fcm_functions:fixhtml(model))
	fcm_web:table_item("Firmware Version", fcm_functions:fixhtml(release))
	fcm_web:table_item("Betriebszeit", fcm_functions:fixhtml(uptime))
	fcm_web:table_item("Auslastung", fcm_functions:fixhtml(node_load))

	fcm_web:table_end()

	io.write("<P>&nbsp;</P>")

	-- Konfiguration

	fcm_web:table_start("Konfiguration")

	fcm_web:table_item("Kontaktdaten", fcm_functions:fixhtml(contact))
	fcm_web:table_item("Rolle", fcm_functions:fixhtml(role))
	if share_location == "1" then
		fcm_web:table_item("Standort", "Latitude " .. latitude .. " Longitude " .. longitude )
	else
		fcm_web:table_item("Standort", "Wird nicht übermittelt" )
	end

	fcm_web:table_end()

	io.write("<P>&nbsp;</P>")

end

if subpage == "/location" then

    if (command == "Setzen") then

		local new_latitude = post_data["latitude"] or ""
		local new_longitude = post_data["longitude"] or ""

		if ( new_latitude == "" ) or ( new_longitude == "" ) then
			-- Übermittlung abschalten
			local sname = uci:get_first("gluon-node-info", "location")
			uci:set("gluon-node-info", sname, "share_location", 0)
			uci:set("gluon-node-info", sname, "latitude", new_latitude)
			uci:set("gluon-node-info", sname, "longitude", new_longitude)
			uci:save("gluon-node-info")
			uci:commit("gluon-node-info")
			share_location = "0"
			else
			-- Übermittlung einschalten 
			local sname = uci:get_first("gluon-node-info", "location")
			uci:set("gluon-node-info", sname, "share_location", 1)
			uci:set("gluon-node-info", sname, "latitude", new_latitude)
			uci:set("gluon-node-info", sname, "longitude", new_longitude)
			uci:save("gluon-node-info")
			uci:commit("gluon-node-info")
			share_location = "1"
		end
		
		latitude = new_latitude
		longitude = new_longitude
	
	end

	-- Aktuellen Standort ausgeben
	fcm_web:table_start("Standort")

	if share_location == "1" then
		fcm_web:table_item("Status", "Aktiviert")
		fcm_web:table_item("Latitude (Breite)", latitude )
		fcm_web:table_item("Longitude (Laenge)", longitude )
	else
		fcm_web:table_item("Status", "Deaktivert" )
	end
	fcm_web:table_end()
	
	io.write("<P>&nbsp;</P>")

	-- Location aus Browser abrufen (HTML5)
	io.write("<script>")
	io.write("navigator.geolocation.getCurrentPosition(function(position){ document.getElementById('latitude').value = position.coords.latitude; document.getElementById('longitude').value = position.coords.longitude;  }, function(){ }); ")
	io.write("</script>")

    -- Formular anzeigen	
	io.write("<form action=\"/cgi-bin/config/location\" method=\"post\">")

	fcm_web:table_start("Ändern")

	fcm_web:table_item("Latitude (Breite)", "<input type=\"text\" id=\"latitude\" name=\"latitude\" value=\"\">")
	fcm_web:table_item("Longitude (Laenge)", "<input type=\"text\" id=\"longitude\" name=\"longitude\" value=\"\">")
  
	fcm_web:table_item("<input type=\"submit\" name=\"cmd\" value=\"Setzen\"></input>", "Leere Werte um die Standortübertragung abzuschalten")

	fcm_web:table_end()

	io.write("</form>   ")

end

io.write("	</div>")
io.write("</article>")

-- Ende :) 
fcm_web:end_of_body()

end -- Abmelden